[2022-06-25 09:12:12,802] {taskinstance.py:851} INFO - Dependencies all met for <TaskInstance: analyze_json_data.processParsedData 2022-06-25T09:11:40.779593+00:00 [queued]>
[2022-06-25 09:12:12,815] {taskinstance.py:851} INFO - Dependencies all met for <TaskInstance: analyze_json_data.processParsedData 2022-06-25T09:11:40.779593+00:00 [queued]>
[2022-06-25 09:12:12,815] {taskinstance.py:1042} INFO - 
--------------------------------------------------------------------------------
[2022-06-25 09:12:12,815] {taskinstance.py:1043} INFO - Starting attempt 1 of 4
[2022-06-25 09:12:12,815] {taskinstance.py:1044} INFO - 
--------------------------------------------------------------------------------
[2022-06-25 09:12:12,822] {taskinstance.py:1063} INFO - Executing <Task(BashOperator): processParsedData> on 2022-06-25T09:11:40.779593+00:00
[2022-06-25 09:12:12,826] {standard_task_runner.py:52} INFO - Started process 1158 to run task
[2022-06-25 09:12:12,828] {standard_task_runner.py:76} INFO - Running: ['airflow', 'tasks', 'run', 'analyze_json_data', 'processParsedData', '2022-06-25T09:11:40.779593+00:00', '--job-id', '355', '--pool', 'default_pool', '--raw', '--subdir', 'DAGS_FOLDER/dagRun.py', '--cfg-path', '/tmp/tmp4kv9di58', '--error-file', '/tmp/tmpyw18en3q']
[2022-06-25 09:12:12,830] {standard_task_runner.py:77} INFO - Job 355: Subtask processParsedData
[2022-06-25 09:12:12,859] {logging_mixin.py:104} INFO - Running <TaskInstance: analyze_json_data.processParsedData 2022-06-25T09:11:40.779593+00:00 [running]> on host bb303642214a
[2022-06-25 09:12:12,892] {taskinstance.py:1257} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=Renato_Otescu
AIRFLOW_CTX_DAG_ID=analyze_json_data
AIRFLOW_CTX_TASK_ID=processParsedData
AIRFLOW_CTX_EXECUTION_DATE=2022-06-25T09:11:40.779593+00:00
AIRFLOW_CTX_DAG_RUN_ID=manual__2022-06-25T09:11:40.779593+00:00
[2022-06-25 09:12:12,892] {bash.py:135} INFO - Tmp dir root location: 
 /tmp
[2022-06-25 09:12:12,893] {bash.py:158} INFO - Running command: python /opt/airflow/sparkFiles/sparkProcess.py
[2022-06-25 09:12:12,901] {bash.py:169} INFO - Output:
[2022-06-25 09:12:14,121] {bash.py:173} INFO - WARNING: An illegal reflective access operation has occurred
[2022-06-25 09:12:14,121] {bash.py:173} INFO - WARNING: Illegal reflective access by org.apache.spark.unsafe.Platform (file:/home/airflow/.local/lib/python3.6/site-packages/pyspark/jars/spark-unsafe_2.12-3.2.1.jar) to constructor java.nio.DirectByteBuffer(long,int)
[2022-06-25 09:12:14,121] {bash.py:173} INFO - WARNING: Please consider reporting this to the maintainers of org.apache.spark.unsafe.Platform
[2022-06-25 09:12:14,121] {bash.py:173} INFO - WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[2022-06-25 09:12:14,121] {bash.py:173} INFO - WARNING: All illegal access operations will be denied in a future release
[2022-06-25 09:12:14,336] {bash.py:173} INFO - Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties
[2022-06-25 09:12:14,336] {bash.py:173} INFO - Setting default log level to "WARN".
[2022-06-25 09:12:14,336] {bash.py:173} INFO - To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
[2022-06-25 09:12:14,558] {bash.py:173} INFO - 22/06/25 09:12:14 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
[2022-06-25 09:12:15,192] {bash.py:173} INFO - 22/06/25 09:12:15 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.
[2022-06-25 09:12:18,589] {bash.py:173} INFO - 22/06/25 09:12:18 ERROR Executor: Exception in task 0.0 in stage 0.0 (TID 0)
[2022-06-25 09:12:18,590] {bash.py:173} INFO - java.io.FileNotFoundException:
[2022-06-25 09:12:18,590] {bash.py:173} INFO - File file:/opt/airflow/sparkFiles/parsedData.csv does not exist
[2022-06-25 09:12:18,590] {bash.py:173} INFO - 
[2022-06-25 09:12:18,590] {bash.py:173} INFO - It is possible the underlying files have been updated. You can explicitly invalidate
[2022-06-25 09:12:18,590] {bash.py:173} INFO - the cache in Spark by running 'REFRESH TABLE tableName' command in SQL or by
[2022-06-25 09:12:18,590] {bash.py:173} INFO - recreating the Dataset/DataFrame involved.
[2022-06-25 09:12:18,590] {bash.py:173} INFO - 
[2022-06-25 09:12:18,590] {bash.py:173} INFO - 	at org.apache.spark.sql.errors.QueryExecutionErrors$.readCurrentFileNotFoundError(QueryExecutionErrors.scala:506)
[2022-06-25 09:12:18,590] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:130)
[2022-06-25 09:12:18,590] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:187)
[2022-06-25 09:12:18,590] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:104)
[2022-06-25 09:12:18,590] {bash.py:173} INFO - 	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:460)
[2022-06-25 09:12:18,590] {bash.py:173} INFO - 	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
[2022-06-25 09:12:18,591] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
[2022-06-25 09:12:18,591] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:759)
[2022-06-25 09:12:18,591] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$getByteArrayRdd$1(SparkPlan.scala:349)
[2022-06-25 09:12:18,591] {bash.py:173} INFO - 	at org.apache.spark.rdd.RDD.$anonfun$mapPartitionsInternal$2(RDD.scala:898)
[2022-06-25 09:12:18,591] {bash.py:173} INFO - 	at org.apache.spark.rdd.RDD.$anonfun$mapPartitionsInternal$2$adapted(RDD.scala:898)
[2022-06-25 09:12:18,591] {bash.py:173} INFO - 	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
[2022-06-25 09:12:18,591] {bash.py:173} INFO - 	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:373)
[2022-06-25 09:12:18,591] {bash.py:173} INFO - 	at org.apache.spark.rdd.RDD.iterator(RDD.scala:337)
[2022-06-25 09:12:18,591] {bash.py:173} INFO - 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
[2022-06-25 09:12:18,591] {bash.py:173} INFO - 	at org.apache.spark.scheduler.Task.run(Task.scala:131)
[2022-06-25 09:12:18,591] {bash.py:173} INFO - 	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:506)
[2022-06-25 09:12:18,591] {bash.py:173} INFO - 	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1462)
[2022-06-25 09:12:18,591] {bash.py:173} INFO - 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:509)
[2022-06-25 09:12:18,591] {bash.py:173} INFO - 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
[2022-06-25 09:12:18,591] {bash.py:173} INFO - 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
[2022-06-25 09:12:18,591] {bash.py:173} INFO - 	at java.base/java.lang.Thread.run(Thread.java:829)
[2022-06-25 09:12:18,617] {bash.py:173} INFO - 22/06/25 09:12:18 WARN TaskSetManager: Lost task 0.0 in stage 0.0 (TID 0) (bb303642214a executor driver): java.io.FileNotFoundException:
[2022-06-25 09:12:18,617] {bash.py:173} INFO - File file:/opt/airflow/sparkFiles/parsedData.csv does not exist
[2022-06-25 09:12:18,617] {bash.py:173} INFO - 
[2022-06-25 09:12:18,617] {bash.py:173} INFO - It is possible the underlying files have been updated. You can explicitly invalidate
[2022-06-25 09:12:18,618] {bash.py:173} INFO - the cache in Spark by running 'REFRESH TABLE tableName' command in SQL or by
[2022-06-25 09:12:18,618] {bash.py:173} INFO - recreating the Dataset/DataFrame involved.
[2022-06-25 09:12:18,618] {bash.py:173} INFO - 
[2022-06-25 09:12:18,618] {bash.py:173} INFO - 	at org.apache.spark.sql.errors.QueryExecutionErrors$.readCurrentFileNotFoundError(QueryExecutionErrors.scala:506)
[2022-06-25 09:12:18,618] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:130)
[2022-06-25 09:12:18,618] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:187)
[2022-06-25 09:12:18,618] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:104)
[2022-06-25 09:12:18,618] {bash.py:173} INFO - 	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:460)
[2022-06-25 09:12:18,618] {bash.py:173} INFO - 	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
[2022-06-25 09:12:18,618] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
[2022-06-25 09:12:18,618] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:759)
[2022-06-25 09:12:18,619] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$getByteArrayRdd$1(SparkPlan.scala:349)
[2022-06-25 09:12:18,619] {bash.py:173} INFO - 	at org.apache.spark.rdd.RDD.$anonfun$mapPartitionsInternal$2(RDD.scala:898)
[2022-06-25 09:12:18,619] {bash.py:173} INFO - 	at org.apache.spark.rdd.RDD.$anonfun$mapPartitionsInternal$2$adapted(RDD.scala:898)
[2022-06-25 09:12:18,619] {bash.py:173} INFO - 	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
[2022-06-25 09:12:18,619] {bash.py:173} INFO - 	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:373)
[2022-06-25 09:12:18,619] {bash.py:173} INFO - 	at org.apache.spark.rdd.RDD.iterator(RDD.scala:337)
[2022-06-25 09:12:18,619] {bash.py:173} INFO - 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
[2022-06-25 09:12:18,619] {bash.py:173} INFO - 	at org.apache.spark.scheduler.Task.run(Task.scala:131)
[2022-06-25 09:12:18,619] {bash.py:173} INFO - 	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:506)
[2022-06-25 09:12:18,619] {bash.py:173} INFO - 	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1462)
[2022-06-25 09:12:18,619] {bash.py:173} INFO - 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:509)
[2022-06-25 09:12:18,619] {bash.py:173} INFO - 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
[2022-06-25 09:12:18,620] {bash.py:173} INFO - 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
[2022-06-25 09:12:18,620] {bash.py:173} INFO - 	at java.base/java.lang.Thread.run(Thread.java:829)
[2022-06-25 09:12:18,620] {bash.py:173} INFO - 
[2022-06-25 09:12:18,620] {bash.py:173} INFO - 22/06/25 09:12:18 ERROR TaskSetManager: Task 0 in stage 0.0 failed 1 times; aborting job
[2022-06-25 09:12:18,681] {bash.py:173} INFO - /home/airflow/.local/lib/python3.6/site-packages/pyspark/context.py:238: FutureWarning: Python 3.6 support is deprecated in Spark 3.2.
[2022-06-25 09:12:18,681] {bash.py:173} INFO -   FutureWarning
[2022-06-25 09:12:18,726] {bash.py:173} INFO - Traceback (most recent call last):
[2022-06-25 09:12:18,726] {bash.py:173} INFO -   File "/opt/airflow/sparkFiles/sparkProcess.py", line 22, in <module>
[2022-06-25 09:12:18,726] {bash.py:173} INFO -     ignoreTrailingWhiteSpace=True)
[2022-06-25 09:12:18,726] {bash.py:173} INFO -   File "/home/airflow/.local/lib/python3.6/site-packages/pyspark/sql/readwriter.py", line 410, in csv
[2022-06-25 09:12:18,726] {bash.py:173} INFO -     return self._df(self._jreader.csv(self._spark._sc._jvm.PythonUtils.toSeq(path)))
[2022-06-25 09:12:18,727] {bash.py:173} INFO -   File "/home/airflow/.local/lib/python3.6/site-packages/py4j/java_gateway.py", line 1322, in __call__
[2022-06-25 09:12:18,727] {bash.py:173} INFO -     answer, self.gateway_client, self.target_id, self.name)
[2022-06-25 09:12:18,727] {bash.py:173} INFO -   File "/home/airflow/.local/lib/python3.6/site-packages/pyspark/sql/utils.py", line 111, in deco
[2022-06-25 09:12:18,727] {bash.py:173} INFO -     return f(*a, **kw)
[2022-06-25 09:12:18,727] {bash.py:173} INFO -   File "/home/airflow/.local/lib/python3.6/site-packages/py4j/protocol.py", line 328, in get_return_value
[2022-06-25 09:12:18,727] {bash.py:173} INFO -     format(target_id, ".", name), value)
[2022-06-25 09:12:18,727] {bash.py:173} INFO - py4j.protocol.Py4JJavaError: An error occurred while calling o34.csv.
[2022-06-25 09:12:18,727] {bash.py:173} INFO - : org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 1 times, most recent failure: Lost task 0.0 in stage 0.0 (TID 0) (bb303642214a executor driver): java.io.FileNotFoundException:
[2022-06-25 09:12:18,727] {bash.py:173} INFO - File file:/opt/airflow/sparkFiles/parsedData.csv does not exist
[2022-06-25 09:12:18,727] {bash.py:173} INFO - 
[2022-06-25 09:12:18,728] {bash.py:173} INFO - It is possible the underlying files have been updated. You can explicitly invalidate
[2022-06-25 09:12:18,728] {bash.py:173} INFO - the cache in Spark by running 'REFRESH TABLE tableName' command in SQL or by
[2022-06-25 09:12:18,728] {bash.py:173} INFO - recreating the Dataset/DataFrame involved.
[2022-06-25 09:12:18,728] {bash.py:173} INFO - 
[2022-06-25 09:12:18,728] {bash.py:173} INFO - 	at org.apache.spark.sql.errors.QueryExecutionErrors$.readCurrentFileNotFoundError(QueryExecutionErrors.scala:506)
[2022-06-25 09:12:18,728] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:130)
[2022-06-25 09:12:18,729] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:187)
[2022-06-25 09:12:18,729] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:104)
[2022-06-25 09:12:18,729] {bash.py:173} INFO - 	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:460)
[2022-06-25 09:12:18,729] {bash.py:173} INFO - 	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
[2022-06-25 09:12:18,729] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
[2022-06-25 09:12:18,729] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:759)
[2022-06-25 09:12:18,729] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$getByteArrayRdd$1(SparkPlan.scala:349)
[2022-06-25 09:12:18,729] {bash.py:173} INFO - 	at org.apache.spark.rdd.RDD.$anonfun$mapPartitionsInternal$2(RDD.scala:898)
[2022-06-25 09:12:18,729] {bash.py:173} INFO - 	at org.apache.spark.rdd.RDD.$anonfun$mapPartitionsInternal$2$adapted(RDD.scala:898)
[2022-06-25 09:12:18,729] {bash.py:173} INFO - 	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
[2022-06-25 09:12:18,729] {bash.py:173} INFO - 	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:373)
[2022-06-25 09:12:18,729] {bash.py:173} INFO - 	at org.apache.spark.rdd.RDD.iterator(RDD.scala:337)
[2022-06-25 09:12:18,730] {bash.py:173} INFO - 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
[2022-06-25 09:12:18,730] {bash.py:173} INFO - 	at org.apache.spark.scheduler.Task.run(Task.scala:131)
[2022-06-25 09:12:18,730] {bash.py:173} INFO - 	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:506)
[2022-06-25 09:12:18,730] {bash.py:173} INFO - 	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1462)
[2022-06-25 09:12:18,730] {bash.py:173} INFO - 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:509)
[2022-06-25 09:12:18,730] {bash.py:173} INFO - 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
[2022-06-25 09:12:18,730] {bash.py:173} INFO - 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
[2022-06-25 09:12:18,730] {bash.py:173} INFO - 	at java.base/java.lang.Thread.run(Thread.java:829)
[2022-06-25 09:12:18,730] {bash.py:173} INFO - 
[2022-06-25 09:12:18,730] {bash.py:173} INFO - Driver stacktrace:
[2022-06-25 09:12:18,731] {bash.py:173} INFO - 	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2454)
[2022-06-25 09:12:18,731] {bash.py:173} INFO - 	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2403)
[2022-06-25 09:12:18,731] {bash.py:173} INFO - 	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2402)
[2022-06-25 09:12:18,731] {bash.py:173} INFO - 	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
[2022-06-25 09:12:18,731] {bash.py:173} INFO - 	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
[2022-06-25 09:12:18,731] {bash.py:173} INFO - 	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
[2022-06-25 09:12:18,731] {bash.py:173} INFO - 	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2402)
[2022-06-25 09:12:18,731] {bash.py:173} INFO - 	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1160)
[2022-06-25 09:12:18,731] {bash.py:173} INFO - 	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1160)
[2022-06-25 09:12:18,731] {bash.py:173} INFO - 	at scala.Option.foreach(Option.scala:407)
[2022-06-25 09:12:18,732] {bash.py:173} INFO - 	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1160)
[2022-06-25 09:12:18,732] {bash.py:173} INFO - 	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:2642)
[2022-06-25 09:12:18,732] {bash.py:173} INFO - 	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2584)
[2022-06-25 09:12:18,732] {bash.py:173} INFO - 	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2573)
[2022-06-25 09:12:18,732] {bash.py:173} INFO - 	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
[2022-06-25 09:12:18,732] {bash.py:173} INFO - 	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:938)
[2022-06-25 09:12:18,732] {bash.py:173} INFO - 	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2214)
[2022-06-25 09:12:18,732] {bash.py:173} INFO - 	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2235)
[2022-06-25 09:12:18,732] {bash.py:173} INFO - 	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2254)
[2022-06-25 09:12:18,732] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeTake(SparkPlan.scala:476)
[2022-06-25 09:12:18,732] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeTake(SparkPlan.scala:429)
[2022-06-25 09:12:18,732] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.CollectLimitExec.executeCollect(limit.scala:48)
[2022-06-25 09:12:18,733] {bash.py:173} INFO - 	at org.apache.spark.sql.Dataset.collectFromPlan(Dataset.scala:3715)
[2022-06-25 09:12:18,733] {bash.py:173} INFO - 	at org.apache.spark.sql.Dataset.$anonfun$head$1(Dataset.scala:2728)
[2022-06-25 09:12:18,733] {bash.py:173} INFO - 	at org.apache.spark.sql.Dataset.$anonfun$withAction$1(Dataset.scala:3706)
[2022-06-25 09:12:18,733] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$5(SQLExecution.scala:103)
[2022-06-25 09:12:18,733] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:163)
[2022-06-25 09:12:18,733] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:90)
[2022-06-25 09:12:18,733] {bash.py:173} INFO - 	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:775)
[2022-06-25 09:12:18,733] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:64)
[2022-06-25 09:12:18,733] {bash.py:173} INFO - 	at org.apache.spark.sql.Dataset.withAction(Dataset.scala:3704)
[2022-06-25 09:12:18,733] {bash.py:173} INFO - 	at org.apache.spark.sql.Dataset.head(Dataset.scala:2728)
[2022-06-25 09:12:18,734] {bash.py:173} INFO - 	at org.apache.spark.sql.Dataset.take(Dataset.scala:2935)
[2022-06-25 09:12:18,734] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$.infer(CSVDataSource.scala:112)
[2022-06-25 09:12:18,734] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.datasources.csv.CSVDataSource.inferSchema(CSVDataSource.scala:65)
[2022-06-25 09:12:18,734] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.datasources.csv.CSVFileFormat.inferSchema(CSVFileFormat.scala:63)
[2022-06-25 09:12:18,734] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.datasources.DataSource.$anonfun$getOrInferFileFormatSchema$11(DataSource.scala:210)
[2022-06-25 09:12:18,734] {bash.py:173} INFO - 	at scala.Option.orElse(Option.scala:447)
[2022-06-25 09:12:18,734] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.datasources.DataSource.getOrInferFileFormatSchema(DataSource.scala:207)
[2022-06-25 09:12:18,734] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:411)
[2022-06-25 09:12:18,734] {bash.py:173} INFO - 	at org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:274)
[2022-06-25 09:12:18,734] {bash.py:173} INFO - 	at org.apache.spark.sql.DataFrameReader.$anonfun$load$3(DataFrameReader.scala:245)
[2022-06-25 09:12:18,734] {bash.py:173} INFO - 	at scala.Option.getOrElse(Option.scala:189)
[2022-06-25 09:12:18,735] {bash.py:173} INFO - 	at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:245)
[2022-06-25 09:12:18,735] {bash.py:173} INFO - 	at org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:571)
[2022-06-25 09:12:18,735] {bash.py:173} INFO - 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[2022-06-25 09:12:18,735] {bash.py:173} INFO - 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[2022-06-25 09:12:18,735] {bash.py:173} INFO - 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[2022-06-25 09:12:18,735] {bash.py:173} INFO - 	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
[2022-06-25 09:12:18,735] {bash.py:173} INFO - 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
[2022-06-25 09:12:18,735] {bash.py:173} INFO - 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)
[2022-06-25 09:12:18,735] {bash.py:173} INFO - 	at py4j.Gateway.invoke(Gateway.java:282)
[2022-06-25 09:12:18,735] {bash.py:173} INFO - 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
[2022-06-25 09:12:18,735] {bash.py:173} INFO - 	at py4j.commands.CallCommand.execute(CallCommand.java:79)
[2022-06-25 09:12:18,735] {bash.py:173} INFO - 	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
[2022-06-25 09:12:18,735] {bash.py:173} INFO - 	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
[2022-06-25 09:12:18,735] {bash.py:173} INFO - 	at java.base/java.lang.Thread.run(Thread.java:829)
[2022-06-25 09:12:18,735] {bash.py:173} INFO - Caused by: java.io.FileNotFoundException:
[2022-06-25 09:12:18,736] {bash.py:173} INFO - File file:/opt/airflow/sparkFiles/parsedData.csv does not exist
[2022-06-25 09:12:18,736] {bash.py:173} INFO - 
[2022-06-25 09:12:18,736] {bash.py:173} INFO - It is possible the underlying files have been updated. You can explicitly invalidate
[2022-06-25 09:12:18,736] {bash.py:173} INFO - the cache in Spark by running 'REFRESH TABLE tableName' command in SQL or by
[2022-06-25 09:12:18,736] {bash.py:173} INFO - recreating the Dataset/DataFrame involved.
[2022-06-25 09:12:18,736] {bash.py:173} INFO - 
[2022-06-25 09:12:18,736] {bash.py:173} INFO - 	at org.apache.spark.sql.errors.QueryExecutionErrors$.readCurrentFileNotFoundError(QueryExecutionErrors.scala:506)
[2022-06-25 09:12:18,736] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:130)
[2022-06-25 09:12:18,736] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:187)
[2022-06-25 09:12:18,736] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:104)
[2022-06-25 09:12:18,736] {bash.py:173} INFO - 	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:460)
[2022-06-25 09:12:18,736] {bash.py:173} INFO - 	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)
[2022-06-25 09:12:18,736] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
[2022-06-25 09:12:18,736] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anon$1.hasNext(WholeStageCodegenExec.scala:759)
[2022-06-25 09:12:18,737] {bash.py:173} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$getByteArrayRdd$1(SparkPlan.scala:349)
[2022-06-25 09:12:18,737] {bash.py:173} INFO - 	at org.apache.spark.rdd.RDD.$anonfun$mapPartitionsInternal$2(RDD.scala:898)
[2022-06-25 09:12:18,737] {bash.py:173} INFO - 	at org.apache.spark.rdd.RDD.$anonfun$mapPartitionsInternal$2$adapted(RDD.scala:898)
[2022-06-25 09:12:18,737] {bash.py:173} INFO - 	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)
[2022-06-25 09:12:18,737] {bash.py:173} INFO - 	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:373)
[2022-06-25 09:12:18,737] {bash.py:173} INFO - 	at org.apache.spark.rdd.RDD.iterator(RDD.scala:337)
[2022-06-25 09:12:18,737] {bash.py:173} INFO - 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
[2022-06-25 09:12:18,737] {bash.py:173} INFO - 	at org.apache.spark.scheduler.Task.run(Task.scala:131)
[2022-06-25 09:12:18,737] {bash.py:173} INFO - 	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:506)
[2022-06-25 09:12:18,737] {bash.py:173} INFO - 	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1462)
[2022-06-25 09:12:18,737] {bash.py:173} INFO - 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:509)
[2022-06-25 09:12:18,737] {bash.py:173} INFO - 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
[2022-06-25 09:12:18,738] {bash.py:173} INFO - 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
[2022-06-25 09:12:18,738] {bash.py:173} INFO - 	... 1 more
[2022-06-25 09:12:18,738] {bash.py:173} INFO - 
[2022-06-25 09:12:19,141] {bash.py:177} INFO - Command exited with return code 1
[2022-06-25 09:12:19,150] {taskinstance.py:1455} ERROR - Bash command failed. The command returned a non-zero exit code.
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.6/site-packages/airflow/models/taskinstance.py", line 1112, in _run_raw_task
    self._prepare_and_execute_task_with_callbacks(context, task)
  File "/home/airflow/.local/lib/python3.6/site-packages/airflow/models/taskinstance.py", line 1285, in _prepare_and_execute_task_with_callbacks
    result = self._execute_task(context, task_copy)
  File "/home/airflow/.local/lib/python3.6/site-packages/airflow/models/taskinstance.py", line 1315, in _execute_task
    result = task_copy.execute(context=context)
  File "/home/airflow/.local/lib/python3.6/site-packages/airflow/operators/bash.py", line 180, in execute
    raise AirflowException('Bash command failed. The command returned a non-zero exit code.')
airflow.exceptions.AirflowException: Bash command failed. The command returned a non-zero exit code.
[2022-06-25 09:12:19,151] {taskinstance.py:1503} INFO - Marking task as UP_FOR_RETRY. dag_id=analyze_json_data, task_id=processParsedData, execution_date=20220625T091140, start_date=20220625T091212, end_date=20220625T091219
[2022-06-25 09:12:19,204] {local_task_job.py:146} INFO - Task exited with return code 1
